# Aliases ls to always color directories
alias ls='ls --color=auto'

alias dev='cd "${HOME}/dev"'

alias dc='docker compose'
alias nr='npm run'

# Aliases for common git operations
alias g='git'
alias ga='git add'
alias gb='git branch'
alias gca='git add . && git commit'
alias gch='git checkout'
alias gchm='git checkout $(git-main-branch)'
alias gd='git diff'
alias glg='git log --oneline'
alias gpl='git pull'
alias gplom='git pull origin $(git-main-branch)'
alias gps='git push'
alias gpsu='git push -u origin $(git-current-branch)'
alias grh='git reset --hard origin/$(git-current-branch)'
alias grs='git reset --soft HEAD~1 && git restore --staged .'
alias gs='gadd --status'
gc() {
    git commit "$@"
    gs
}
gf() {
    git fetch
    gs
}
gst() {
    if [ "$#" -eq 0 ]; then
        git stash --include-untracked
    else
        git stash "$@"
    fi
}
gpsf() {
    if [ "$(git-current-branch)" = "$(git-main-branch)" ]; then
        echo "Tried to force-push to main branch. Are you sure you want to do this?"
        return
    fi

    git push --force-with-lease "$@"
}

# Aliases for git management of dotfiles
alias df-g='git --git-dir="${HOME}/dotfiles" --work-tree="${HOME}"'
alias df-gb='df-g branch'
alias df-gd='df-g diff'
alias df-glg='df-g log --oneline'
alias df-gpl='df-g pull'
alias df-gps='df-g push'
alias df-gs='df-g -c color.ui=always status -sb | ${HOME}/scripts/sort-git-status.py'
alias df-ls='df-g ls-tree main -r --name-only'
df-ga() {
    df-g add "$@"
    df-gs
}
df-gc() {
    df-g commit "$@"
    df-gs
}

# Echoes the current git branch
git-current-branch() { git branch --show-current ; }

# Echoes main/master branch depending on repo
git-main-branch() {
    git rev-parse --git-dir &>/dev/null || return

    main_refs=("refs/heads/main" "refs/remotes/origin/main")
    for ref in $main_refs; do
        if git show-ref -q --verify $ref; then
            echo "main"
            return
        fi
    done

    echo "master"
}

# Opens IntelliJ
idea() {
    ("${HOME}/.local/share/JetBrains/Toolbox/apps/intellij-idea-ultimate/bin/idea.sh" "$1" > /dev/null 2>&1 &) &> /dev/null
}

# Opens JetBrains Rider
rider() {
    ("${HOME}/.local/share/JetBrains/Toolbox/apps/rider/bin/rider.sh" "$1" > /dev/null 2>&1 &) &> /dev/null
}

ij() {
    cd "$@" && git pull --ff-only && idea .
}
vs() {
    cd "$@" && git pull --ff-only && code .
}
